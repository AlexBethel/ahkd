* ahkd

  ahkd (Alex's HotKey Daemon) is a generic hotkey daemon for X11 and
  Wayland, designed to provide key bindings to window managers like
  ~bspwm~ and others that don't include their own.

** Project state

   - [X] Configuration file parsing
   - [-] X11 compatibility (~x11rb~)
     - [X] Key listening
     - [ ] Key synthesis
   - [ ] Wayland compatibility
     - [ ] Key listening
     - [ ] Key synthesis
   - [X] ~bind~ command
   - [ ] ~map~ command

** Usage

   To use ~ahkd~, the first thing you should do is create a
   configuration file; an example file is provided in ~config_sample~.
   Once you have done this, you can build the project using ~cargo
   build --release~, which will place the binary in
   ~target/release/ahkd~.

   The program is invoked as ~ahkd [OPTIONS] <config-file>~, where
   ~<config-file>~ is the name of the configuration file and
   ~[OPTIONS]~ is any of:
   - ~-h, --help~ to display a help string.
   - ~-V, --version~ to print information about the program version.
   - ~-d, --display <DISPLAY>~ to connect to an X11 display; if this
     is not specified, the program will use the value of the
     ~$DISPLAY~ environment variable, and if that is not specified an
     error will occur.

** Configuration file syntax

   The configuration file is just a text file where each line is
   either blank, a comment (whose first non-whitespace character is
   "#"), or a command. Each command begins with either the word "bind"
   or the word "map", denoting an action to be taken when a sequence
   of keys are pressed.

   Practical examples of all this information can be found in the
   sample config file.

** Key sequences

   The commands in ~ahkd~ all operate on key sequences. A key sequence
   are specified as space-separated sequences of "key chords", which
   are set of optionally one or more modifiers (control, shift, meta,
   alt, super) followed by a key name. Modifiers and keys can be
   separated by either hyphens or plus symbols.

*** Modifier names

    Modifiers are designed to be amenable to several different styles
    to fit different use cases. The following modifier keys and
    aliases thereof are recognized:
    - Control, Ctrl, C.
    - Shift, S.
    - Mod1, Alt, Meta, A, M.
    - Mod2.
    - Mod3.
    - Mod4, Super, Windows, Command, s, Hyper, h.
    - Mod5.
    Single-letter names are case-sensitive to make shift and super
    distinguishable, but the other modifier names are not.

*** Key names

    Key names are the standard X11 keysyms. For lowercase and
    uppercase ASCII letters, these are just the letter in lower- and
    uppercase, respectively; for other characters, use
    #+BEGIN_SRC bash
      xev | grep 'keysym'
    #+END_SRC
    to print keysym names.

    Note that key names should agree with modifiers; for example,
    write "shift+colon" and "semicolon", rather than "shift+semicolon"
    and "colon", because it is impossible (at least on an ~en_US~
    keyboard) to type a colon while not holding shift or to type a
    semicolon while holding shift.
